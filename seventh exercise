class Publication:
    def __init__(self, name):
        self.name = name

    def print_information(self):
        print(f"Name: {self.name}")


class Book(Publication):
    def __init__(self, name, author, page_count):
        super().__init__(name)
        self.author = author
        self.page_count = page_count

    def print_information(self):
        super().print_information()
        print(f"Author: {self.author}")
        print(f"Page Count: {self.page_count}")


class Magazine(Publication):
    def __init__(self, name, chief_editor):
        super().__init__(name)
        self.chief_editor = chief_editor

    def print_information(self):
        super().print_information()
        print(f"Chief Editor: {self.chief_editor}")


# Main program
donald_duck = Magazine(name="Donald Duck", chief_editor="Aki Hyypp√§")
compartment_no_6 = Book(name="Compartment No. 6", author="Rosa Liksom", page_count=192)

# Print information for each publication
donald_duck.print_information()
print("\n")
compartment_no_6.print_information()

######

import requests

def get_random_chuck_norris_joke():
    url = "https://api.chucknorris.io/jokes/random"
    response = requests.get(url)

    if response.status_code == 200:
        joke_data = response.json()
        joke_text = joke_data.get("value", "Failed to fetch joke.")
        return joke_text
    else:
        return "Failed to fetch Chuck Norris joke."

if __name__ == "__main__":
    chuck_norris_joke = get_random_chuck_norris_joke()
    print(chuck_norris_joke)

